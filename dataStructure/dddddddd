import React, { useState } from 'react';

const jobTypes = [
  'Full-time', 'Part-time', 'Contract', 'Internship', 
  // ... add more job types here
];

const JobTypeFilter = ({ selectedTypes, setSelectedTypes }) => {
  const [searchTerm, setSearchTerm] = useState('');

  const filteredJobTypes = jobTypes.filter(type => 
    type.toLowerCase().includes(searchTerm.toLowerCase())
  );

  const handleCheckboxChange = (type) => {
    setSelectedTypes(prev => 
      prev.includes(type) ? prev.filter(t => t !== type) : [...prev, type]
    );
  };

  return (
    <div className="mb-4">
      <h3 className="font-semibold mb-2">Job Type</h3>
      <input 
        type="text" 
        placeholder="Search job types..." 
        className="border border-gray-300 px-4 py-2 rounded w-full mb-2"
        value={searchTerm}
        onChange={(e) => setSearchTerm(e.target.value)}
      />
      <div className="max-h-40 overflow-y-auto">
        {filteredJobTypes.map(type => (
          <label key={type} className="flex items-center mb-2">
            <input 
              type="checkbox" 
              className="mr-2"
              checked={selectedTypes.includes(type)}
              onChange={() => handleCheckboxChange(type)}
            />
            {type}
          </label>
        ))}
      </div>
    </div>
  );
};

const JobCard = ({ job, onCardClick }) => (
  <div className="bg-white p-4 shadow-md rounded-lg cursor-pointer" onClick={() => onCardClick(job)}>
    <h3 className="text-lg font-bold">{job.title}</h3>
    <p className="text-sm text-gray-500">{job.company} - {job.location}</p>
    <p className="mt-2 text-gray-700">{job.description}</p>
    <div className="mt-4 flex space-x-4">
      <button className="bg-green-500 text-white px-4 py-2 rounded">Save</button>
      <button className="bg-blue-500 text-white px-4 py-2 rounded">Apply</button>
    </div>
  </div>
);

const JobDetailsCanvas = ({ job, onClose }) => (
  <div className="fixed inset-y-0 right-0 w-1/3 bg-white shadow-lg p-4 overflow-y-auto">
    <button onClick={onClose} className="absolute top-4 right-4 text-2xl">&times;</button>
    <h2 className="text-2xl font-bold mb-4">{job.title}</h2>
    <p className="text-gray-600 mb-2">{job.company} - {job.location}</p>
    <p className="mb-4">{job.description}</p>
    {/* Add more job details here */}
  </div>
);

const App = () => {
  const [selectedJobTypes, setSelectedJobTypes] = useState([]);
  const [location, setLocation] = useState('');
  const [salaryRange, setSalaryRange] = useState(0);
  const [experienceLevel, setExperienceLevel] = useState('');
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedJob, setSelectedJob] = useState(null);

  // Sample job data
  const jobs = [
    { id: 1, title: 'Software Engineer', company: 'Tech Co', location: 'New York, NY', description: 'We are looking for a skilled software engineer to join our team...' },
    { id: 2, title: 'Marketing Manager', company: 'Brand Inc', location: 'San Francisco, CA', description: 'We are seeking a dynamic marketing manager to lead our campaigns...' },
    // Add more job objects here
  ];

  const filteredJobs = jobs.filter(job => 
    job.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
    job.company.toLowerCase().includes(searchTerm.toLowerCase()) ||
    job.location.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <div className="bg-gray-100 min-h-screen">
      <div className="flex mt-4 px-4">
        {/* Filter Sidebar */}
        <div className="w-1/4 bg-white p-4 shadow-md rounded-lg sticky top-4 h-screen overflow-y-auto">
          <h2 className="text-lg font-bold mb-4">Filters</h2>
          
          <JobTypeFilter selectedTypes={selectedJobTypes} setSelectedTypes={setSelectedJobTypes} />
          
          <div className="mb-4">
            <h3 className="font-semibold mb-2">Location</h3>
            <input 
              type="text" 
              placeholder="Enter location" 
              className="border border-gray-300 px-4 py-2 rounded w-full"
              value={location}
              onChange={(e) => setLocation(e.target.value)}
            />
          </div>
          
          <div className="mb-4">
            <h3 className="font-semibold mb-2">Salary Range</h3>
            <input 
              type="range" 
              min="0" 
              max="200000" 
              className="w-full"
              value={salaryRange}
              onChange={(e) => setSalaryRange(e.target.value)}
            />
            <div className="flex justify-between text-sm text-gray-500">
              <span>$0</span>
              <span>$200,000+</span>
            </div>
          </div>
          
          <div className="mb-4">
            <h3 className="font-semibold mb-2">Experience Level</h3>
            <div>
              {['Entry Level', 'Mid Level', 'Senior Level'].map(level => (
                <label key={level} className="flex items-center mb-2">
                  <input 
                    type="radio" 
                    name="experience" 
                    className="mr-2"
                    value={level}
                    checked={experienceLevel === level}
                    onChange={() => setExperienceLevel(level)}
                  />
                  {level}
                </label>
              ))}
            </div>
          </div>
          
          <button className="bg-blue-500 text-white w-full py-2 rounded">Apply Filters</button>
        </div>

        {/* Job List */}
        <div className="w-3/4 ml-4 p-4">
          <input 
            type="text" 
            placeholder="Search jobs..." 
            className="border border-gray-300 px-4 py-2 rounded w-full mb-4"
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
          />
          <div className="grid gap-4">
            {filteredJobs.map(job => (
              <JobCard key={job.id} job={job} onCardClick={setSelectedJob} />
            ))}
          </div>
        </div>
      </div>

      {selectedJob && (
        <JobDetailsCanvas job={selectedJob} onClose={() => setSelectedJob(null)} />
      )}
    </div>
  );
};

export default App;